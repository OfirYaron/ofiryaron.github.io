{"version":3,"file":"static/js/980.b96cb848.chunk.js","mappings":"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","sources":["data/blog/blog.js","components/assets/icons.js","components/Code.js","components/Post.js","pages/Blog.js","data/blog|lazy|/^/.//.*$/|groupOptions: {}|namespace object"],"sourcesContent":["const data = [\n  {\n    filename: 'blog-roadmap.md',\n  },\n  {\n    filename: 'tampermonkey-functions.md',\n  },\n];\n\nexport default data;\n","import React from 'react';\n\nexport const CopyIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' className='h-5 w-5' viewBox='0 0 20 20' fill='#88d1ef'>\n    <path d='M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z' />\n    <path d='M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z' />\n  </svg>\n);\n\nexport const PasteIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' className='h-5 w-5' viewBox='0 0 20 20' fill='#88d1ef'>\n    <path d='M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z' />\n    <path d='M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z' />\n  </svg>\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { materialLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { CopyIcon, PasteIcon } from './assets/icons';\n\nconst Code = ({ children, language }) => {\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCopied(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [copied]);\n\n  return (\n    <div className='code'>\n      <CopyToClipboard text={children} onCopy={() => setCopied(true)}>\n        <button className='icon copy-icon'>\n          {copied ? <PasteIcon /> : <CopyIcon />}\n        </button>\n      </CopyToClipboard>\n      <SyntaxHighlighter language={language} style={materialLight}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nCode.propTypes = {\n  children: PropTypes.any,\n  language: PropTypes.string\n};\n\nexport default Code;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Markdown from 'markdown-to-jsx';\nimport Code from './Code';\n\nconst Post = ({ post }) => (\n  <article className='post markdown' id={'post' + post.date}>\n    <header>\n      <div className='title'>\n        <h2 data-testid='heading'><Link to='/Blog'>{post.title}</Link></h2>\n        <p>(in about {post.wordcount} words)</p>\n      </div>\n    </header>\n    <div className='container'>\n      <div className='post-wrapper'>\n        <Markdown options={{\n          overrides: {\n            code: {\n              component: Code,\n            },\n          },\n        }}\n        >\n          {post.markdown}\n        </Markdown>\n      </div>\n    </div>\n  </article>\n);\n\nPost.propTypes = {\n  post: propTypes.object,\n};\n\nexport default Post;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport Main from '../layouts/Main';\nimport Post from '../components/Post';\nimport blogs from '../data/blog/blog';\n\nconst collectMetatada = (markdown) => {\n  const count = markdown.split(/\\s+/)\n    .map((s) => s.replace(/\\W/g, ''))\n    .filter((s) => s.length).length;\n\n  const metadataRegex = /_metadata_:(?<field>(\\w)*)(]:-\\s\")(?<value>[\\w\\s\\d/'+-]*)(\")/g;\n  const metadata = [...markdown.matchAll(metadataRegex)]\n    .reduce((acc, match) => ({ ...acc, [match[1]]: match[4] }), {});\n\n  return { ...metadata, wordcount: count, markdown };\n};\n\nconst Blog = ({ children }) => {\n  const [blogContent, setBlogContent] = useState([]);\n\n  useEffect(() => {\n    blogs.map((blog) => {\n      import('./../data/blog/' + blog.filename)\n        .then(res => {\n          fetch(res.default)\n            .then(response => response.text())\n            .then(response => {\n              setBlogContent(currBlogContent => [\n                ...currBlogContent,\n                collectMetatada(response)\n              ]);\n            });\n        });\n      return true;\n    });\n  }, [children]);\n\n  return (\n    <Main\n      title='Blog'\n      description='Software Development, Cloud Architecture and 3D Printing Articles'\n    >\n      {blogContent.map(post => (<Post key={post.date} post={post} />))}\n    </Main>\n  );\n};\n\nBlog.propTypes = {\n  children: propTypes.string,\n};\n\nexport default Blog;\n","var map = {\n\t\"./bash-commands.md\": [\n\t\t5543,\n\t\t1,\n\t\t543\n\t],\n\t\"./blog\": [\n\t\t3099,\n\t\t9\n\t],\n\t\"./blog-roadmap.md\": [\n\t\t1012,\n\t\t1,\n\t\t12\n\t],\n\t\"./blog.js\": [\n\t\t3099,\n\t\t9\n\t],\n\t\"./mac-installations.md\": [\n\t\t1831,\n\t\t1,\n\t\t831\n\t],\n\t\"./tampermonkey-functions.md\": [\n\t\t2299,\n\t\t1,\n\t\t299\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7248;\nmodule.exports = webpackAsyncContext;"],"names":["filename","CopyIcon","xmlns","className","viewBox","fill","d","PasteIcon","children","language","useState","copied","setCopied","useEffect","timer","setTimeout","clearTimeout","text","onCopy","style","materialLight","post","id","date","to","title","wordcount","options","overrides","code","component","Code","markdown","collectMetatada","count","split","map","s","replace","filter","length","metadataRegex","metadata","matchAll","reduce","acc","match","blogContent","setBlogContent","blogs","blog","then","res","fetch","default","response","currBlogContent","Main","description","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","ids","all","slice","t","keys","Object","module","exports"],"sourceRoot":""}