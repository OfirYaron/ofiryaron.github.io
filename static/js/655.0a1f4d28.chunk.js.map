{"version":3,"file":"static/js/655.0a1f4d28.chunk.js","mappings":"8OAEaA,EAAW,kBACtB,iBAAKC,MAAM,6BAA6BC,UAAU,UAAUC,QAAQ,YAAYC,KAAK,UAArF,WACE,iBAAMC,EAAE,qEACR,iBAAMA,EAAE,0DAHY,EAOXC,EAAY,kBACvB,iBAAKL,MAAM,6BAA6BC,UAAU,UAAUC,QAAQ,YAAYC,KAAK,UAArF,WACE,iBAAMC,EAAE,oDACR,iBAAMA,EAAE,iGAHa,EC2BzB,EA7Ba,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxB,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,GAAU,EACX,GAAE,KACH,OAAO,kBAAMI,aAAaF,EAAnB,CACR,GAAE,CAACH,KAGF,iBAAKR,UAAU,OAAf,WACE,SAAC,IAAD,CAAiBc,KAAMT,EAAUU,OAAQ,kBAAMN,GAAU,EAAhB,EAAzC,UACE,mBAAQT,UAAU,iBAAlB,SACGQ,GAAS,SAACJ,EAAD,KAAgB,SAACN,EAAD,SAG9B,SAAC,IAAD,CAAmBQ,SAAUA,EAAUU,MAAOC,EAAAA,EAA9C,SACGZ,MAIR,ECOD,EA9Ba,SAAC,GAAD,IAAGa,EAAH,EAAGA,KAAH,OACX,qBAASlB,UAAU,gBAAgBmB,GAAE,cAASD,EAAKE,MAAnD,WACE,6BACE,iBAAKpB,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAMqB,GAAE,gBAAWH,EAAKI,WAAxB,SAAsCJ,EAAKK,WACrE,sCAAcL,EAAKM,UAAnB,cACA,sCAAcN,EAAKE,KAAnB,0BAGJ,gBAAKpB,UAAU,YAAf,UACE,gBAAKA,UAAU,eAAf,UACE,SAAC,IAAD,CAAUyB,QAAS,CACjBC,UAAW,CACTC,KAAM,CACJC,UAAWC,KAHjB,SAQGX,EAAKY,iBAnBH,C,2CCqBb,UA3Ba,CACX,CACEC,SAAU,mBAEZ,CACEA,SAAU,6BAEZ,CACEA,SAAU,wBAEZ,CACEA,SAAU,oBAEZ,CACEA,SAAU,wBAEZ,CACEA,SAAU,wBAEZ,CACEA,SAAU,2BAEZ,CACEA,SAAU,uB,iJCbRC,EAAY,SAACC,GACjB,MAA2BA,EAAWC,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAUC,SAASD,EAAM,GAAzB,IAArD,eAAOE,EAAP,KAAYC,EAAZ,KAAmBC,EAAnB,KACA,OAAO,IAAIC,KAAKD,EAAMD,EAAQ,EAAGD,EAClC,EAEKI,EAAa,SAACC,EAAGC,GAGrB,OAFcZ,EAAUW,EAAEvB,MACZY,EAAUY,EAAExB,KAE3B,EAuCD,UArCiB,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAClB,GAA8CE,EAAAA,EAAAA,UAAS,IAAvD,eAAOsC,EAAP,KAAwBC,EAAxB,KACQC,GAASC,EAAAA,EAAAA,MAATD,KAqBR,OAnBArC,EAAAA,EAAAA,YAAU,WACRuC,EAAAA,QAAAA,QACU,SAACC,GAAD,OAAUA,EAAKnB,WAAL,UAAqBgB,EAArB,MAAV,IACPZ,KAAI,SAACe,GAYJ,OAXA,QAAO,KAAoBA,EAAKnB,UAC7BoB,MAAK,SAAAC,GACJC,MAAMD,EAAIE,SACPH,MAAK,SAAAI,GAAQ,OAAIA,EAASzC,MAAb,IACbqC,MAAK,SAAAI,GACJT,GAAmB,SAAAU,GAAe,MAAI,kBACjCA,GADiC,qBAE/BC,EAAAA,EAAAA,GAAgBF,IAFe,IAEJjC,UAAW4B,EAAKnB,SAAS2B,QAAQ,MAAO,QACxEC,KAAKjB,EAH2B,GAInC,GACJ,KACI,CACR,GACJ,GAAE,CAACrC,KAGF,SAAC,IAAD,CACEkB,MAAM,OACNqC,YAAY,oEAFd,SAIGf,EAAgBV,KAAI,SAAAjB,GAAI,OAAK,SAAC,IAAD,CAAsBA,KAAMA,GAAjBA,EAAKE,KAArB,KAG9B,C,gFCpDD,aAAgBU,GACd,IAAM+B,EAAQ/B,EAASI,MAAM,OAC1BC,KAAI,SAAC2B,GAAD,OAAOA,EAAEJ,QAAQ,MAAO,GAAxB,IACJK,QAAO,SAACD,GAAD,OAAOA,EAAEE,MAAT,IAAiBA,OAErBC,GAAa,OAAG,wDAAH,mBACbC,GAAW,OAAIpC,EAASqC,SAASF,IACpCG,QAAO,SAACC,EAAKC,GAAN,eAAC,UAAqBD,GAAtB,cAA4BC,EAAM,GAAKA,EAAM,IAA7C,GAAoD,CAAC,GAE/D,OAAO,kBAAKJ,GAAZ,IAAsB1C,UAAWqC,EAAO/B,SAAUA,EAAS4B,QAAQO,EAAe,KATpF,C,uBCAA,IAAI9B,EAAM,CACT,4BAA6B,CAC5B,KACA,EACA,KAED,qBAAsB,CACrB,KACA,EACA,KAED,SAAU,CACT,KACA,GAED,oBAAqB,CACpB,KACA,EACA,IAED,YAAa,CACZ,KACA,GAED,wBAAyB,CACxB,KACA,EACA,KAED,yBAA0B,CACzB,KACA,EACA,KAED,yBAA0B,CACzB,KACA,EACA,KAED,sBAAuB,CACtB,KACA,EACA,KAED,8BAA+B,CAC9B,KACA,EACA,KAED,yBAA0B,CACzB,KACA,EACA,MAGF,SAASoC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEvC,EAAKqC,GAC9B,OAAOG,QAAQC,UAAUzB,MAAK,WAC7B,IAAI0B,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAElD,KAAO,mBACHkD,CACP,IAGD,IAAIE,EAAM5C,EAAIqC,GAAMrD,EAAK4D,EAAI,GAC7B,OAAOJ,QAAQK,IAAID,EAAIE,MAAM,GAAG9C,IAAIsC,EAAoBI,IAAI1B,MAAK,WAChE,OAAOsB,EAAoBS,EAAE/D,EAAa,GAAT4D,EAAI,GACtC,GACD,CACAR,EAAoBY,KAAO,WAAa,OAAOC,OAAOD,KAAKhD,EAAM,EACjEoC,EAAoBpD,GAAK,KACzBkE,EAAOC,QAAUf,C","sources":["components/assets/icons.js","components/Code.js","components/Post.js","data/blog/blog.js","pages/PostPage.js","utils/markdown-utils.js","data/blog|lazy|/^/.//.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import React from 'react';\n\nexport const CopyIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' className='h-5 w-5' viewBox='0 0 20 20' fill='#88d1ef'>\n    <path d='M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z' />\n    <path d='M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z' />\n  </svg>\n);\n\nexport const PasteIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' className='h-5 w-5' viewBox='0 0 20 20' fill='#88d1ef'>\n    <path d='M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z' />\n    <path d='M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z' />\n  </svg>\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { materialLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { CopyIcon, PasteIcon } from './assets/icons';\n\nconst Code = ({ children, language }) => {\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCopied(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [copied]);\n\n  return (\n    <div className='code'>\n      <CopyToClipboard text={children} onCopy={() => setCopied(true)}>\n        <button className='icon copy-icon'>\n          {copied ? <PasteIcon /> : <CopyIcon />}\n        </button>\n      </CopyToClipboard>\n      <SyntaxHighlighter language={language} style={materialLight}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nCode.propTypes = {\n  children: PropTypes.any,\n  language: PropTypes.string,\n};\n\nexport default Code;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Markdown from 'markdown-to-jsx';\nimport Code from './Code';\n\nconst Post = ({ post }) => (\n  <article className='post markdown' id={`post${post.date}`}>\n    <header>\n      <div className='title'>\n        <h2 data-testid='heading'><Link to={`/post/${post.permalink}`}>{post.title}</Link></h2>\n        <p>(in about {post.wordcount} words)</p>\n        <p>posted on {post.date} By Ofir Yaron</p>\n      </div>\n    </header>\n    <div className='container'>\n      <div className='post-wrapper'>\n        <Markdown options={{\n          overrides: {\n            code: {\n              component: Code,\n            },\n          },\n        }}\n        >\n          {post.markdown}\n        </Markdown>\n      </div>\n    </div>\n  </article>\n);\n\nPost.propTypes = {\n  post: propTypes.object,\n};\n\nexport default Post;\n","const data = [\n  {\n    filename: 'blog-roadmap.md',\n  },\n  {\n    filename: 'tampermonkey-functions.md',\n  },\n  {\n    filename: 'terraform-modules.md',\n  },\n  {\n    filename: 'bash-commands.md',\n  },\n  {\n    filename: 'mac-installations.md',\n  },\n  {\n    filename: 'efs-creation-bash.md',\n  },\n  {\n    filename: 'aliases-and-commands.md',\n  },\n  {\n    filename: 'docker-lifecycle.md',\n  },\n];\n\nexport default data;\n","/* eslint-disable prefer-template */\n\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport collectMetatada from '../utils/markdown-utils';\nimport Main from '../layouts/Main';\nimport Post from '../components/Post';\nimport blogs from '../data/blog/blog';\n\nconst parseDate = (dateString) => {\n  const [day, month, year] = dateString.split('/').map((part) => parseInt(part, 10));\n  return new Date(year, month - 1, day);\n};\n\nconst sortByDate = (a, b) => {\n  const dateA = parseDate(a.date);\n  const dateB = parseDate(b.date);\n  return dateA - dateB;\n};\n\nconst PostPage = ({ children }) => {\n  const [postPageContent, setPostPageContent] = useState([]);\n  const { name } = useParams();\n\n  useEffect(() => {\n    blogs\n      .filter((blog) => blog.filename === `${name}.md`)\n      .map((blog) => {\n        import('./../data/blog/' + blog.filename)\n          .then(res => {\n            fetch(res.default)\n              .then(response => response.text())\n              .then(response => {\n                setPostPageContent(currBlogContent => [\n                  ...currBlogContent,\n                  { ...collectMetatada(response), permalink: blog.filename.replace('.md', '') },\n                ].sort(sortByDate));\n              });\n          });\n        return true;\n      });\n  }, [children]);\n\n  return (\n    <Main\n      title='Blog'\n      description='Software Development, Cloud Architecture and 3D Printing Articles'\n    >\n      {postPageContent.map(post => (<Post key={post.date} post={post} />))}\n    </Main>\n  );\n};\n\nPostPage.propTypes = {\n  children: propTypes.string,\n};\n\nexport default PostPage;\n","export default (markdown) => {\n  const count = markdown.split(/\\s+/)\n    .map((s) => s.replace(/\\W/g, ''))\n    .filter((s) => s.length).length;\n\n  const metadataRegex = /\\[_metadata_:(?<field>(\\w)*)(]:-\\s\")(?<value>[\\w\\s\\d/'+\\-,]*)(\")/g;\n  const metadata = [...markdown.matchAll(metadataRegex)]\n    .reduce((acc, match) => ({ ...acc, [match[1]]: match[4] }), {});\n\n  return { ...metadata, wordcount: count, markdown: markdown.replace(metadataRegex, '') };\n};\n","var map = {\n\t\"./aliases-and-commands.md\": [\n\t\t5966,\n\t\t1,\n\t\t966\n\t],\n\t\"./bash-commands.md\": [\n\t\t5543,\n\t\t1,\n\t\t543\n\t],\n\t\"./blog\": [\n\t\t3099,\n\t\t9\n\t],\n\t\"./blog-roadmap.md\": [\n\t\t1012,\n\t\t1,\n\t\t12\n\t],\n\t\"./blog.js\": [\n\t\t3099,\n\t\t9\n\t],\n\t\"./docker-lifecycle.md\": [\n\t\t3236,\n\t\t1,\n\t\t236\n\t],\n\t\"./efs-creation-bash.md\": [\n\t\t1677,\n\t\t1,\n\t\t677\n\t],\n\t\"./mac-installations.md\": [\n\t\t1831,\n\t\t1,\n\t\t831\n\t],\n\t\"./react-gh-pages.md\": [\n\t\t5880,\n\t\t1,\n\t\t880\n\t],\n\t\"./tampermonkey-functions.md\": [\n\t\t2299,\n\t\t1,\n\t\t299\n\t],\n\t\"./terraform-modules.md\": [\n\t\t8961,\n\t\t1,\n\t\t961\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7248;\nmodule.exports = webpackAsyncContext;"],"names":["CopyIcon","xmlns","className","viewBox","fill","d","PasteIcon","children","language","useState","copied","setCopied","useEffect","timer","setTimeout","clearTimeout","text","onCopy","style","materialLight","post","id","date","to","permalink","title","wordcount","options","overrides","code","component","Code","markdown","filename","parseDate","dateString","split","map","part","parseInt","day","month","year","Date","sortByDate","a","b","postPageContent","setPostPageContent","name","useParams","blogs","blog","then","res","fetch","default","response","currBlogContent","collectMetatada","replace","sort","description","count","s","filter","length","metadataRegex","metadata","matchAll","reduce","acc","match","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","ids","all","slice","t","keys","Object","module","exports"],"sourceRoot":""}